import threading
import time
import random

NUM_FILOSOFOS = 5

# Semaforo
palillos = [threading.Semaphore(1) for _ in range(NUM_FILOSOFOS)]

def filosofo(id_filosofo):
    while True:
        # Pensar
        print(f"Filósofo {id_filosofo} está pensando.")
        time.sleep(random.uniform(1, 3))

        # Tomar palillos
        palillo_izquierdo = palillos[id_filosofo]
        palillo_derecho = palillos[(id_filosofo + 1) % NUM_FILOSOFOS]

        print(f"Filósofo {id_filosofo} intenta tomar palillo izquierdo.")
        palillo_izquierdo.acquire()
        print(f"Filósofo {id_filosofo} tiene el palillo izquierdo.")

        print(f"Filósofo {id_filosofo} intenta tomar palillo derecho.")
        palillo_derecho.acquire()
        print(f"Filósofo {id_filosofo} tiene ambos palillos. Comiendo.")

        # Comer
        time.sleep(random.uniform(2, 5))
        print(f"Filósofo {id_filosofo} ha terminado de comer. Suelta los palillos.")

        # Soltar palillos
        palillo_izquierdo.release()
        palillo_derecho.release()


if __name__ == "__main__":
    filosofos = [threading.Thread(target=filosofo, args=(i,)) for i in range(NUM_FILOSOFOS)]

    # Inicia los hilos
    for hilo_filosofo in filosofos:
        hilo_filosofo.start()

    # Espera a que todos los hilos terminen
    for hilo_filosofo in filosofos:
        hilo_filosofo.join()