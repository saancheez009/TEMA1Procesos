import threading 
import random

class JuegoAdivinanza(threading.Thread):
    numAdivinar = random.randint(0, 100)
    numAcertado = False
    lock = threading.Lock()

    def __init__(self, nombre):
        super().__init__()
        self.nombre = nombre

    def run(self):
        while not JuegoAdivinanza.numAcertado:
            numero_intentado = random.randint(0, 100)

            with JuegoAdivinanza.lock:  #(indica que el estado esta cerrado pero da eror al ejecutar con esta linea)
                if JuegoAdivinanza.numAcertado:
                 break

            if numero_intentado == JuegoAdivinanza.numAdivinar:
                print(f"{self.nombre} ha adivinado el número {JuegoAdivinanza.numAdivinar}!")
                JuegoAdivinanza.numAcertado = True
            else:
                print(f"{self.nombre} intentó con {numero_intentado}, pero no adivinó.")

if __name__ == "__main__":
    hilos = []
    for i in range(10):
        hilo = JuegoAdivinanza(f"Hilo-{i + 1}")
        hilos.append(hilo)
        hilo.start()

    # Espera a que un hilo acierte
    for hilo in hilos:
        hilo.join()